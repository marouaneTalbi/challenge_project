{% extends 'base_front.html.twig' %}

{% block body %}
    <section class="music-group-show">
        <h1>{{ music_group.name }}</h1>
        <h2>Artistes</h2>
        <div class="artist-list">
            {% for artist in music_group.artiste %}
                <div class="artist">
                    <img class="picture" src="{{ asset('images/' ~  artist.image) }}" alt="logo" />
                    <h4>{{ artist.firstname }}</h4>
                </div>
            {% endfor %}
        </div>
        <h2>Biographie</h2>
        <span>coming soon...</span>
        <h2>Musiques <a title="upload une musique" class="add-music" href="{{ path('front_app_music_new_for_groupmusic' , {'id': music_group.id}) }}"><i class="fa-solid fa-plus"></i></a></h2>
        <div class="music-container">
            {% for music in musics %}
                <a class="music">{{ music.name }}</a>
            {% endfor %}
        </div>
        <div>
            {% if is_granted('ROLE_MANAGER') %}
                {% if is_granted('MANAGER_ACCESS', music_group) %}
                    <a class="button" href="{{ path('front_app_music_group_edit', {'id': music_group.id}) }}">Modifier</a>
                {% endif %}
            {% endif %}

            {% if is_granted('ROLE_ARTIST', music_group) or is_granted('ROLE_MANAGER', music_group) %}
                {% if is_granted('MANAGER_ACCESS', music_group) or is_granted('MEMBER_ACCES', music_group) %}
                    <a class="calendar" href="{{ path('front_app_music_group_calendar', {'id': music_group.id}) }}">gérer les évènements</a>
                {% endif %}
            {% endif %}
        </div>

        {% set array = [] %}
        {% for music in musics %}
            {% set array = array | merge([{id: music.id ,name: music.name, url: music.url}]) %}
        {% endfor %}
        <input type="hidden" id="array" value="{{ array|json_encode }}">

        <audio controls id="audio"></audio>

        <script>
        const musics = document.getElementById('array').value;
        const allMusicsParsed = JSON.parse(musics);
        const audio = document.getElementById("audio");
        const source= document.createElement("source");
        const previus = document.createElement("button");
        const next = document.createElement("button");
        const songName= document.createElement("h2");
        const div1 = document.getElementById("div1");
        const div2 = document.getElementById("div2");

        previus.setAttribute("class","addButton")
        previus.innerHTML = "<i class='fa-solid fa-backward'></i>";
        next.setAttribute("class","addButton")
        next.innerHTML = "<i class='fa-solid fa-forward'></i>";
        audio.appendChild(source);
        source.setAttribute("src", '/uploads/'+allMusicsParsed[0].url);
        source.setAttribute("type", 'audio/mpeg');

            next.addEventListener("click", function(){
                const indexofItem = allMusicsParsed.findIndex(x => x.url === source.getAttribute("src").replace('/uploads/', ''));
                if(indexofItem +1 === allMusicsParsed.length){
                    source.setAttribute("src", '/uploads/'+allMusicsParsed[0].url);
                    songName.innerHTML = allMusicsParsed[0].name;
                } else {
                    source.setAttribute("src", '/uploads/'+allMusicsParsed[indexofItem + 1].url);
                    songName.innerHTML = allMusicsParsed[indexofItem + 1].name;
                }
                 audio.load();
                 audio.play();
            });

            previus.addEventListener("click", function(){
                const indexofItem = allMusicsParsed.findIndex(x => x.url === source.getAttribute("src").replace('/uploads/', ''));
                if(indexofItem +1 === allMusicsParsed.length){
                    source.setAttribute("src", '/uploads/'+allMusicsParsed[0].url);
                    songName.innerHTML = allMusicsParsed[0].name;
                } else {
                    source.setAttribute("src", '/uploads/'+allMusicsParsed[indexofItem + 1].url);
                    songName.innerHTML = allMusicsParsed[indexofItem + 1].name;
                }
                audio.load();
                audio.play();
            });

        for(let i = 0; i < allMusicsParsed.length; i++){
            const music = allMusicsParsed[i];
            const button = document.createElement("button");

            button.setAttribute("class","addButton")
            button.innerHTML = music.name;
            button.addEventListener("click", function(){
                source.setAttribute("src", '/uploads/'+music.url);
                console.log(source);
                audio.load();
                audio.play();
            });
            div2.appendChild(button);
        }

        div1.appendChild(previus);
        div1.appendChild(next);
        div1.insertBefore(audio, next);
        div1.insertBefore(previus,songName);
    </script>
    </section>

{% endblock %}


